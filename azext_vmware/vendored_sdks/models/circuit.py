# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Circuit(Model):
    """Circuit.

    :param primary_subnet: CIDR of primary subnet
    :type primary_subnet: str
    :param secondary_subnet: CIDR of secondary subnet
    :type secondary_subnet: str
    :param express_route_id: Identifier of the ExpressRoute (Microsoft Colo
     only)
    :type express_route_id: str
    :param authorizations: Authorizations for the ExpressRoute (Microsoft Colo
     only)
    :type authorizations:
     list[~vendored_sdks.models.ExpressRouteAuthorization]
    :param express_route_private_peering_id: ExpressRoute private peering
     identifier
    :type express_route_private_peering_id: str
    """

    _attribute_map = {
        'primary_subnet': {'key': 'primarySubnet', 'type': 'str'},
        'secondary_subnet': {'key': 'secondarySubnet', 'type': 'str'},
        'express_route_id': {'key': 'expressRouteID', 'type': 'str'},
        'authorizations': {'key': 'authorizations', 'type': '[ExpressRouteAuthorization]'},
        'express_route_private_peering_id': {'key': 'expressRoutePrivatePeeringID', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(Circuit, self).__init__(**kwargs)
        self.primary_subnet = kwargs.get('primary_subnet', None)
        self.secondary_subnet = kwargs.get('secondary_subnet', None)
        self.express_route_id = kwargs.get('express_route_id', None)
        self.authorizations = kwargs.get('authorizations', None)
        self.express_route_private_peering_id = kwargs.get('express_route_private_peering_id', None)
